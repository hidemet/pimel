// resources/scss/custom.scss

// -----------------------------------------------------------------------------
// 0. IMPORT FONTS & ICON SETS
// -----------------------------------------------------------------------------
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200');
@import url('https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css');
@import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css');

// -----------------------------------------------------------------------------
// 1. YOUR CUSTOM VARIABLE DEFINITIONS (BEFORE BOOTSTRAP VARS)
//    Define all your custom color names, font stacks, etc. here.
//    These are *your* names, not yet overriding Bootstrap variables.
// -----------------------------------------------------------------------------

// **NUOVE VARIABILI PER GLI SFONDI SPECIFICI**
// $bg-form-color: #d3e4ff;
// $bg-body-public-default: #f8f9ff; // Sfondo per pagine pubbliche
// $bg-body-blog-index: #e6ebf0; // Sfondo per la pagina /blog
// $bg-body-private-default: #f8fafc; // Sfondo per pagine utenti loggati (dashboard, profilo)

// Custom Theme Colors
//$custom-primary: #0076cf;
//$custom-primary: #005ccc;
$custom-primary: #3960cc;
$custom-secondary: #47444e;
//$custom-secondary: #a5a5a5;
$custom-tertiary: #203672;
$custom-warning: #f8cc47;
$custom-ctc: #ffce12;
$custom-ctc-text-color: #241a00; // Specific for .btn-ctc text

//$custom-body-bg:

// Navbar Specific Customizations
$custom-navbar-color: #203672; // Used for links, toggler icon based on this
// $custom-navbar-link-hover-color: darken($custom-navbar-color, 10%);
// $custom-navbar-link-active-color: $custom-primary; // Example: use your $custom-primary

// Global Theming Variables
$global-text-color: #000000;
$body-bg: #f8f9ff;
$body-color: $global-text-color;
$footer-custom-bg-color: #203672;

// Specific Page/Component Backgrounds
$surface-color: #e6eaf0; // General surface
$surface-blog: #e6e7f0; // Blog surface
$navbar-bg-custom: #e6eaf0; // Potentially for a custom navbar bg class, if not using standard BS classes
$servizi-page-bg: #f9f9ff;
$newsletter-bg-color: #f8eedb;
$consulenza-bg-color: #e4eaf1;
$article-list-bg: #f8f9ff; // Was defined, check usage
$header-bg-home: #d3e4ff; // For home page header
$hero-section-bg: #00529d;

// Font Stacks
$font-family-sans-serif-custom:
  'Inter',
  system-ui,
  -apple-system,
  'Segoe UI',
  Roboto,
  'Helvetica Neue',
  'Noto Sans',
  'Liberation Sans',
  Arial,
  sans-serif,
  'Apple Color Emoji',
  'Segoe UI Emoji',
  'Segoe UI Symbol',
  'Noto Color Emoji';
$font-family-serif-custom:
  'Lora', Georgia, Cambria, 'Times New Roman', Times, serif;

// -----------------------------------------------------------------------------
// 2. IMPORT BOOTSTRAP FUNCTIONS & VARIABLES
//    This makes Bootstrap's SASS functions and default variables available.
// -----------------------------------------------------------------------------
@import 'bootstrap/scss/functions';
@import 'bootstrap/scss/variables'; // Bootstrap's default $primary, $secondary, $theme-colors, etc. are now set.

// -----------------------------------------------------------------------------
// 3. OVERRIDE BOOTSTRAP VARIABLES WITH YOUR CUSTOM VALUES
//    Now, take your custom values from Step 1 and assign them to Bootstrap's variables.
// -----------------------------------------------------------------------------

// Core Colors
$primary: $custom-primary;
$secondary: $custom-secondary;
$warning: $custom-warning;
// $tertiary: $custom-tertiary; // Bootstrap 5.3 doesn't have a $tertiary by default in $theme-colors,
// but you can add it to the $theme-colors map.

// Body
// Sovrascrivi il $body-bg di default con il tuo colore per le pagine pubbliche.
// Le classi specifiche per pagina sovrascriveranno questo se necessario.
$body-color: $global-text-color;

// Typography
$font-family-base: $font-family-sans-serif-custom; // You chose Inter as primary
$headings-font-family: $font-family-sans-serif-custom; // Using Inter for headings too
// $font-family-base: $font-family-serif-custom; // This was defined later, ensure one is primary
$headings-font-weight: 600; // Example weight for headings

$font-size-base: 1.1rem;

$bg-form-color: #e6ebf0;
// Links
$nav-underline-custom-link-color: $gray-700;
// $link-color: $custom-navbar-color; // Sets global link color
// $link-hover-color: darken($custom-navbar-color, 10%);
// $link-hover-decoration: none; // No underline on hover for all links
// $btn-link-color: $link-color;
// $btn-link-hover-color: $link-hover-color;

// Navbar Specific Variable Overrides (using Bootstrap's variable names)
// $navbar-nav-link-padding-x: 0.85rem; // Example, adjust as needed
$nav-link-font-weight: 500;
// For .navbar-light (which is used if your navbar has bg-white or bg-light)
$navbar-light-color: $custom-navbar-color;
// $navbar-light-hover-color: $custom-navbar-link-hover-color;
// $navbar-light-active-color: $custom-navbar-link-active-color;
// $navbar-light-toggler-border-color: rgba($custom-navbar-color, 0.25);
// $navbar-light-toggler-icon-bg: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='#{str-replace(inspect($custom-navbar-color), '#', '%23')}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");

// 4. MERGE/MODIFY THEME COLORS MAP
//    Do this *after* Step 3 where you've set $primary, $secondary etc.
// -----------------------------------------------------------------------------
$theme-colors: map-merge(
  $theme-colors,
  (
    'tertiary': $custom-tertiary,
    // Add your custom tertiary
    'ctc': $custom-ctc,
    // Add your custom ctc color
    'primary': $custom-primary,
    // Already updated by $primary = $custom-primary above
    'secondary': $custom-secondary,
    // Already updated by $secondary = $custom-secondary above
    'warning': $custom-warning,

    // Already updated by $warning = $custom-warning above
    // "secondary": $secondary, // Already updated
     // "warning": $warning // Already updated
  )
);

// -----------------------------------------------------------------------------
// 5. IMPORT THE REST OF BOOTSTRAP (OR SPECIFIC COMPONENTS)
//    Bootstrap will now compile using your overridden variables and theme-colors.
// -----------------------------------------------------------------------------

// OR, if you prefer the single import (less control but simpler):
@import 'bootstrap/scss/bootstrap'; // Ensure steps 1-4 are before this.

// -----------------------------------------------------------------------------
// 6. YOUR CUSTOM STYLES (APPLIED AFTER BOOTSTRAP)
// -----------------------------------------------------------------------------

.bg-herosection {
  background-color: $hero-section-bg;
}

.is-invalid-border {
  border-color: var(--bs-danger) !important; // Rende il bordo rosso
  box-shadow: 0 0 0 0.25rem rgba(var(--bs-danger-rgb), 0.25) !important; // Aggiunge un'ombra rossa
}

.nav-pills-segmented {
  display: inline-flex; // Modificato per non occupare tutta la larghezza di default
  // display: flex; // Se vuoi che occupi tutta la larghezza disponibile e i bottoni si espandano
  flex-wrap: wrap;
  border: 1px solid var(--bs-border-color);
  border-radius: var(--bs-border-radius-lg); // Bordo più arrotondato
  overflow: hidden;
  margin-bottom: 1.5rem; // Spazio sotto

  .nav-link {
    // flex-grow: 1; // Rimuovi se non vuoi che si espandano per riempire lo spazio
    text-align: center;
    border-radius: 0;
    border-right: 1px solid var(--bs-border-color);
    color: var(--bs-body-color);
    padding: 0.5rem 1rem; // Aggiustato padding
    font-size: 0.875rem;
    transition:
      background-color 0.15s ease-in-out,
      color 0.15s ease-in-out;

    &:last-child {
      border-right: 0;
    }

    &.active {
      background-color: var(
        --bs-primary
      ); // Colore primario per lo sfondo attivo
      color: var(--bs-light); // Testo chiaro per contrasto
      font-weight: 500;
      .badge {
        // Badge dentro il link attivo
        background-color: var(--bs-light) !important;
        color: var(--bs-primary) !important;
      }
    }

    &:not(.active):hover {
      background-color: var(--bs-tertiary-bg);
    }

    .material-symbols-outlined {
      font-size: 1.1em; // Leggermente più grande dell'fs-6
      vertical-align: text-bottom;
    }

    .badge {
      font-size: 0.8em;
      padding: 0.25em 0.6em;
      line-height: 1;
    }
  }
}

// **NUOVA CLASSE PER SFONDO SEZIONI FORM**
.bg-form-section {
  background-color: $bg-form-color !important; // Usiamo !important per assicurarci che sovrascriva altre utility se necessario
}

// **NUOVE CLASSI PER GLI SFONDI**
// Queste classi verranno applicate all'elemento <body> o agli header/navbar.
// L'uso di `!important` è per assicurarsi che sovrascrivano le utility di Bootstrap se applicate
// allo stesso elemento, ma idealmente la struttura delle props dei componenti lo gestirà.
// .bg-body-public-default {
//     background-color: $bg-body-public-default !important;
// }
// .bg-body-blog-index {
//     background-color: $bg-body-blog-index !important;
// }
// .bg-body-private-default {
//     background-color: $bg-body-private-default !important;
// }

// Classi per Navbar/Page-Header quando devono ereditare il colore del body
// (o essere un colore specifico come 'bg-white')
// Non servono classi CSS specifiche per la navbar se questa usa la stessa classe del body
// o 'bg-white'. Le props del componente gestiranno quale classe applicare.

// Stili per la Navbar (Header) per garantire leggibilità sui nuovi sfondi.
// Bootstrap applica .navbar-light per sfondi chiari e .navbar-dark per scuri.
// Se i tuoi sfondi custom sono chiari (come sembrano essere), .navbar-light è appropriato.
// Verrà gestito nel file del componente header.blade.php.

// Max-width for main containers (this was in your CSS)
// header nav.navbar > .container,
// footer.footer-custom-background > div.container,
// .page-content-container {
//     // Applied to a wrapper div in your views
//     max-width: 1140px; // Consider using Bootstrap's container variables or breakpoints
// }

.signature-img {
  max-width: 250px;
  height: auto;
  margin-top: 1rem;
}

.article-author-img {
  width: 48px; // Definisci la dimensione qui invece che inline
  height: 48px;
  object-fit: cover;
}

.article-author-icon {
  font-size: 48px; // Definisci la dimensione qui invece che inline
  line-height: 1; // Per un corretto allineamento verticale se necessario
}

// Le classi per l'indentazione del testo rimangono utili:
.ps-comment-body {
  padding-left: calc(2.5rem + 1rem);
  @include media-breakpoint-down(sm) {
    padding-left: calc(2.5rem + 0.5rem);
  }
}

.ps-replies-indent {
  padding-left: 1rem;
  @include media-breakpoint-down(sm) {
    padding-left: 0.75rem;
  }
}

.ps-reply-body {
  padding-left: calc(2rem + 0.5rem);
  @include media-breakpoint-down(sm) {
    padding-left: calc(2rem + 0.25rem);
  }
}

// Padding per il corpo del commento principale, allineato con il testo sotto l'icona
.ps-comment-body {
  // L'icona principale è fs-1 (circa 2.25rem-2.5rem) + me-3 (1rem)
  // Vogliamo un padding sinistro che sia circa questa larghezza
  // Regola questo valore se necessario dopo aver testato visivamente
  padding-left: calc(2.5rem + 1rem); // Basato su fs-1 e me-3

  @include media-breakpoint-down(sm) {
    // Su schermi piccoli, riduciamo un po'
    padding-left: calc(2.5rem + 0.5rem);
  }
}

// Indentazione per il contenitore delle risposte
.ps-replies-indent {
  // Questo padding aggiunge un'ulteriore indentazione per le risposte
  padding-left: 1rem; // O altro valore desiderato per l'indentazione delle risposte

  @include media-breakpoint-down(sm) {
    padding-left: 0.75rem;
  }
}

// Padding per il corpo della singola risposta, allineato con il testo sotto l'icona della risposta
.ps-reply-body {
  // L'icona della risposta è fs-2 (circa 1.75rem-2rem) + me-2 (0.5rem)
  padding-left: calc(2rem + 0.5rem);

  @include media-breakpoint-down(sm) {
    padding-left: calc(2rem + 0.25rem);
  }
}

.nav-underline {
  .nav-link {
    &:not(.active) {
      color: $gray-800; // Usa la variabile definita nello Step 3
    }
  }
}

// Component-specific styles
.footer-custom-background {
  background-color: $footer-custom-bg-color !important;
}

.btn-ctc {
  // Text color is generated by Bootstrap based on background.
  // If you need to force it:
  color: $custom-ctc-text-color !important;
}

// .navbar-nav .nav-link.active {
//     font-weight: 600; // or 700, if $nav-link-font-weight wasn't enough
// }

// Material Symbols alignment
// .material-symbols-outlined {
//     vertical-align: middle;
//     font-size: 1.2rem; // Adjust as needed
//     line-height: 1;
//     display: inline-flex;
//     align-items: center;
//     justify-content: center;
//     position: relative;
//     top: -0.05em; // Fine-tune
// }
// Backgrounds for specific sections/pages
.bg-header-blog {
  background-color: white;
  margin-bottom: 3rem !important;
} // Example
.bg-content-blog {
  background-color: #e6ebf0;
} // Example, or use $surface-blog
.bg-newsletter-page-form-area {
  background-color: #e6ebf0;
} // Example for the form wrapper class you might add
// .bg-default is already handled by $body-bg potentially

// Article card related styles (excerpt, title clamping)
// .excerpt-clamp-custom {
//     display: -webkit-box;
//     -webkit-box-orient: vertical;
//     overflow: hidden;
//     text-overflow: ellipsis;
//     -webkit-line-clamp: 3;
//     line-height: 1.5;
// }
// .article-title-clamp a {
//     display: -webkit-box;
//     -webkit-box-orient: vertical;
//     overflow: hidden;
//     text-overflow: ellipsis;
//     -webkit-line-clamp: 2;
// }

// ... other specific styles from your original file like .blog-post-item, .article-page-container etc.
// Ensure they are still relevant and correctly structured.

// -----------------------------------------------------------------------------
// 7. CSS VARIABLE OVERRIDES (:root) (APPLIED LAST)
//    This is for Bootstrap's CSS Custom Properties.
// -----------------------------------------------------------------------------
:root,
[data-bs-theme='light'] {
  --bs-primary: #{$primary}; // Use the SASS variable $primary (which is now your custom color)
  --bs-primary-rgb: #{to-rgb($primary)};
  --bs-secondary: #{$secondary};
  --bs-secondary-rgb: #{to-rgb($secondary)};
  --bs-warning: #{$warning};
  --bs-warning-rgb: #{to-rgb($warning)};
  // --bs-tertiary: #{$custom-tertiary}; // If you want to expose it as a CSS var
  // --bs-tertiary-rgb: #{to-rgb($custom-tertiary)};
  --bs-ctc: #{$custom-ctc};
  --bs-ctc-rgb: #{to-rgb($custom-ctc)};

  --bs-body-color: #{$body-color};
  --bs-body-color-rgb: #{to-rgb($body-color)};
  --bs-body-bg: #{$body-bg}; // Questo sarà #F5F7FA
  --bs-body-bg-rgb: #{to-rgb($body-bg)};

  --bs-link-color: #{$custom-primary};
  --bs-link-color-rgb: #{to-rgb($custom-primary)};
  --bs-link-hover-color: #{darken($custom-primary, 10%)};
  --bs-link-hover-color-rgb: #{to-rgb(darken($custom-primary, 10%))};

  // Form switch specific variables (ensure $primary is your custom color)
  --bs-form-switch-checked-bg: #{$primary};
  --bs-form-switch-checked-border-color: #{$primary};
  // ... etc. for pagination, nav-pills as in your original file, using the SASS variables
}
